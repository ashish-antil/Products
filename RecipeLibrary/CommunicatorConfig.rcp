#require CommName -- e.g. V300b, SMDPb
#require Server -- e.g. alpha, beta2, test
#require HostIP -- IP address of server
#default HostPort=2xx1
#default DestPort=2xx0

#put base=C:\TeamImarda\Imarda360\Imarda360.Gateway\CommunicatorServices\`CommName`\`CommName`CommunicatorService
#put file=`base`\App_`Server`.config

Get all the Atom Types from the gateway by searching for pattern in app.config, use in creating new configs
#put rx1=(?s)<add\stype="ImardaBatchProcessorInterface\.AtomPart.*?</add>
#put knowntypes=`C:\TeamImarda\Imarda360\Imarda360.Gateway\AtomGateway\AtomGatewayService\App.config`
#find `rx1` knowntypes
$0
#end

#new `file`
<?xml version="1.0" encoding="utf-8"?>

<configuration>
	<configSections>
		<section name="dataConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings, Microsoft.Practices.EnterpriseLibrary.Data, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
	</configSections>
	<dataConfiguration defaultDatabase="ImardaDBConnection" />
	<connectionStrings>
		<add name="ImardaDBConnection" connectionString="Integrated Security=False;Persist Security Info=False;Data Source=I360DB-VM;User ID=application;Password=imarda;Initial Catalog=Imarda360.VehicleManagement" providerName="System.Data.SqlClient" />
	</connectionStrings>
	<appSettings>
		<add key="dbCheck" value="localhost" />
		<add key="HostAddress" value="`HostIP`" />
		<add key="HostPort" value="`HostPort`" />
		<add key="DestinationPort" value="`DestPort`" />
		<add key="InboundQueue" value=".\private$\inbound.`CommName`" />
	</appSettings>
	<system.serviceModel>
		<services>
			<service behaviorConfiguration="debugTrue" name="`CommName`Communicator.`CommName`Sender">
				<endpoint name="`CommName`ImardaGatewaySenderTcpEndpoint" address="net.tcp://I360COM-`CommName`:`EndPointPort`/ImardaGatewaySender" behaviorConfiguration="NonStupidlyParanoidBehavior" binding="netTcpBinding" bindingConfiguration="DefaultBinding" contract="GatewayCommunicator.ICommunicatorSender" />
			</service>
		</services>
		<client>
			<!-- TCP -->
			<endpoint name="ImardaGatewayReceiverTcpEndpoint" address="net.tcp://I360GATE-REC:10100/ImardaGatewayReceiver" behaviorConfiguration="NonStupidlyParanoidBehavior" binding="netTcpBinding" bindingConfiguration="DefaultBinding" contract="ImardaGateway.IImardaGatewayReceiver" />
		</client>
		<behaviors>
			<serviceBehaviors>
				<behavior name="debugTrue">
					<serviceDebug includeExceptionDetailInFaults="true" />
					<serviceThrottling maxConcurrentCalls="250" maxConcurrentSessions="250" maxConcurrentInstances="1" />
				</behavior>
			</serviceBehaviors>
			<endpointBehaviors>
				<behavior name="NonStupidlyParanoidBehavior">
					<dataContractSerializer maxItemsInObjectGraph="16777216" />
				</behavior>
			</endpointBehaviors>
		</behaviors>
		<bindings>
			<basicHttpBinding>
				<binding name="HugeBufferBindingConfig" closeTimeout="00:02:00" openTimeout="00:02:00" receiveTimeout="00:02:00" sendTimeout="00:02:00" bypassProxyOnLocal="true" maxBufferSize="32768000" maxReceivedMessageSize="32768000">
					<readerQuotas maxDepth="32" maxStringContentLength="32768000" maxArrayLength="500000" maxBytesPerRead="4096" maxNameTableCharCount="16384" />
				</binding>
			</basicHttpBinding>
			<netTcpBinding>
				<binding name="DefaultBinding" closeTimeout="00:00:10" receiveTimeout="00:20:00" sendTimeout="00:01:00" maxBufferPoolSize="524288" maxBufferSize="104857600" maxReceivedMessageSize="104857600">
					<readerQuotas maxStringContentLength="104857600" />
					<security mode="None">
						<transport protectionLevel="None" />
					</security>
				</binding>
			</netTcpBinding>
		</bindings>
	</system.serviceModel>
	<system.runtime.serialization>
		<dataContractSerializer>
			<declaredTypes>
`knowntypes`
			</declaredTypes>
		</dataContractSerializer>
	</system.runtime.serialization>
</configuration>

#end

#put rx2=<None\sInclude="App\.config"\s/>\s*
#after `rx2` `base`\`CommName`CommunicatorService.csproj
<None Include="App_`Server`.config" />

#end

#warn Please add "`file`" to Vault.