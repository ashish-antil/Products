#name NewBusMethod

#require jira
#put base=C:\TeamImarda\Imarda360\
#default service=Alerting|CRM|Gateway|JobDispatch|Security|Solution|Task|Tracking|VehicleManagement|Metrics|Accounting
#require entity -- solution entity class name
#default file=`entity`
#require method
#default reqtype=IDRequest|GenericRequest


#new `base`Imarda360.Business\Services\Imarda`service`\Imarda`service`BusinessInterface\View\`file`\`file`.Extra.cs
//& `jira`
using System;
using System.Collections.Generic;
using System.ServiceModel;
using FernBusinessBase;

namespace Imarda`service`Business
{
	partial interface IImarda`service`
	{
	}
}

#end

#put EOF=}\s*}\s*\z
#before `EOF` `base`Imarda360.Business\Services\Imarda`service`\Imarda`service`BusinessInterface\View\`file`\`file`.Extra.cs
	[OperationContract] //& `jira`
		GetListResponse<`entity`> `method`(`reqtype` request); //& `jira`
	
#end


#new `base`Imarda360.Business\Services\Imarda`service`\Imarda`service`Business\Control\`file`\`file`.Extra.cs
//& `jira`
using System;
using System.Collections.Generic;
using FernBusinessBase;
using System.Data;
using Microsoft.Practices.EnterpriseLibrary.Data;
using FernBusinessBase.Errors;

namespace Imarda`service`Business
{
	partial class Imarda`service`
	{
	}
}

#end

#before `EOF` `base`Imarda360.Business\Services\Imarda`service`\Imarda`service`Business\Control\`file`\`file`.Extra.cs
		//& `jira`
		#region `method`
		public GetListResponse<`entity`> `method`(`reqtype` request)
		{
			try
			{
				var response = new GetListResponse<`entity`>();
				Database db = DatabaseFactory.CreateDatabase(Util.GetConnName<`entity`>());

				bool includeInactive = request.HasSome(RetrievalOptions.IncludeInactive);
				int topn = request.Get<int>("TopN", int.MaxValue);
				return ImardaDatabase.GetList<`entity`>("SP`method`", includeInactive, request.CompanyID, topn, request.ID);
			}
			catch (Exception ex)
			{
				return ErrorHandler.Handle<GetListResponse<`entity`>>(ex);
			}
		}
		#endregion
		//. `jira`

#end

#before \z C:\TeamImarda\Imarda360\Imarda360.DatabaseScripts\Imarda360.`service`\Imarda360.`service`All.sql
--& `jira`
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP`method`]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SP`method`]
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP`method`]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE SP`method`
	@IncludeInactive bit,
	@TopN int,
	@CompanyID uniqueidentifier,
	@X uniqueidentifier
AS
	SELECT TOP(@TopN) * FROM `entity`
	WHERE CompanyID = @CompanyID
	AND (@IncludeInactive=1 OR Active=1)
	AND Deleted=0
	AND @X = ...
	ORDER BY ...
'
END
GO
--. `jira`
#end

#warn If new files were created, add them to the csproj and Vault!