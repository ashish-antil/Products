#name NewBusMethod

#ask jira=Jira ticket (including project, e.g. IM-1234):

#ask service
Select the business service:
-
Accounting
Alerting
CRM
Gateway
GIS
JobDispatch
Manufacturing
Metrics
Security
Task
Tracking
VehicleManagement
#end

#ask entity=Entity type? e.g. Unit, Vehicle, Driver


#ask method=What is the new method's name?
#put spname=SP`method`

#ask req
What is the request type? 
-
IDRequest
IDListRequest
GenericRequest
(TODO)
#end

#put base=C:\TeamImarda\Imarda360\
#put file=`entity`

#new `base`Imarda360.Business\Services\Imarda`service`\Imarda`service`BusinessInterface\View\`file`\`file`.Extra.cs
//& `jira`
using System;
using System.Collections.Generic;
using System.ServiceModel;
using FernBusinessBase;

namespace Imarda`service`Business
{
	partial interface IImarda`service`
	{
	}
}
#end

#put eof=}\s*}\s*\z

#before `eof` `base`Imarda360.Business\Services\Imarda`service`\Imarda`service`BusinessInterface\View\`file`\`file`.Extra.cs
		[OperationContract] //& `jira`
		BusinessMessageResponse `method`(`req` request); //& `jira`
	
#end


#new `base`Imarda360.Business\Services\Imarda`service`\Imarda`service`Business\Control\`file`\`file`.Extra.cs
//& `jira`
using System;
using System.Collections.Generic;
using FernBusinessBase;
using System.Data;
using Microsoft.Practices.EnterpriseLibrary.Data;
using FernBusinessBase.Errors;

namespace Imarda`service`Business
{
	partial class Imarda`service`
	{
	}
}
//. `jira`

#end

#if resp GetItem
#put getter=GetItem
#else
#put getter=GetList
#endif


#before `eof` `base`Imarda360.Business\Services\Imarda`service`\Imarda`service`Business\Control\`file`\`file`.Extra.cs
		//& `jira`
		public BusinessMessageResponse `method`(`req` request)
		{
			try
			{
				var db = ImardaDatabase.CreateDatabase(Util.GetConnName<`entity`>());
				db.ExecuteNonQuery("`spname`", request.ID, TODO);
				return new BusinessMessageResponse();
			}
			catch (Exception ex)
			{
				return ErrorHandler.Handle(ex);
			}
		}
		//. `jira`
#end



#append C:\TeamImarda\Imarda360\Imarda360.DatabaseScripts\Imarda360.`service`\Imarda360.`service`All.sql
--& `jira`
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[`spname`]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[`spname`]
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[`spname`]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE `spname`
	@id uniqueidentifier
AS
	UPDATE `entity`
	SET ...
	WHERE [ID] = @id
'
END
GO
--. `jira`
#end

#warn If new files were created, add them to the csproj and Vault!