/***********************************************************************
Auto Generated Code

Generated by   : PROLIFICXNZ\adamson.delacruz
Date Generated : 27/04/2009 1:27 PM
Copyright @2009 CodeGenerator
***********************************************************************/
using System;
using System.Collections.Generic;
using System.Text;
using System.Runtime.Serialization;
using FernBusinessBase;
using System.Data;
using FernBusinessBase.Control;

namespace ImardaCRMBusiness 
{
	[DataContract]
	public class EmailGroup : FullBusinessEntity 
	{				
		#region Constructor
		public EmailGroup():base()
		{
		}
		#endregion
		
		#region Properties
		public const int GroupNameMaxLen = 50;
		[ValidLength(-1, GroupNameMaxLen)]
		[DataMember]
		public string GroupName 
		{get ;set ;}
		public const int GroupDescriptionMaxLen = 250;
		[ValidLength(-1, GroupDescriptionMaxLen)]
		[DataMember]
		public string GroupDescription 
		{get ;set ;}
		public const int GroupEmailRecipientsMaxLen = 250;
		[ValidLength(-1, GroupEmailRecipientsMaxLen)]
		[DataMember]
		public string GroupEmailRecipients 
		{get ;set ;}
		public const int GroupEmailAddressesMaxLen = 250;
		[ValidLength(-1, GroupEmailAddressesMaxLen)]
		[DataMember]
		public string GroupEmailAddresses 
		{get ;set ;}
#if EntityProperty
		[DataMember]
		public `cstype` `field` { get; set; }
#endif
		
		#endregion

		#region Methods
		public override void AssignData(IDataReader dr) 
		{
			base.AssignData(dr);
			GroupName = GetValue<string>(dr, "GroupName");
			GroupDescription = GetValue<string>(dr, "GroupDescription");
			GroupEmailRecipients = GetValue<string>(dr, "GroupEmailRecipients");
			GroupEmailAddresses = GetValue<string>(dr, "GroupEmailAddresses");
#if EntityProperty_NoDate
			`field` = GetValue<`cstype`>(dr, "`field`");
#endif
#if EntityProperty_Date
			`field` = GetDateTime(dr, "`field`");
#endif
		

		}

		#endregion

	
	}
}

