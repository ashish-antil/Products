/***********************************************************************
Auto Generated Code.

Generated by   : IMARDAINC\Qian.Chen
Date Generated : 12/03/2010 12:10 p.m.
Copyright (c)2009 CodeGenerator 1.2
***********************************************************************/
using System;
using System.Collections.Generic;
using System.Text;
using System.Data;
using System.Runtime.Serialization;
using FernBusinessBase;
using FernBusinessBase.Control;

namespace ImardaCRMBusiness 
{
	[DataContract]
	public class NotificationItem : FullBusinessEntity, IComparable<NotificationItem>
	{				
		#region Constructor
		public NotificationItem()
		{
		}
		#endregion
		
		#region Properties

		public const int NameMaxLen = 50;
		[ValidLength(0, NameMaxLen)]
		[DataMember]
		public string Name { get; set; }

		[DataMember]
		public Guid CRMID { get; set; }

		[DataMember]
		public Guid NotificationPlanID { get; set; }

		public const int DeliveryMethodMaxLen = 50;
		[ValidLength(0, DeliveryMethodMaxLen)]
		[DataMember]
		public string DeliveryMethod { get; set; }

		[DataMember]
		public string Content { get; set; }

		[DataMember]
		public bool Template { get; set; }
		
		//optional fields
		[DataMember]
		public string UserName{ get; set; }
		[DataMember]
		public string FullName { get; set; }

		[DataMember]
		public string Subject { get; set; }
#if EntityProperty
		[DataMember]
		public `cstype` `field` { get; set; }
#endif
		
		
		#endregion

		#region Methods
		public override void AssignData(IDataReader dr) 
		{
			base.AssignData(dr);
			Name = GetValue<string>(dr, "Name");
			CRMID = GetValue<Guid>(dr, "CRMID");
			NotificationPlanID = GetValue<Guid>(dr, "NotificationPlanID");
			DeliveryMethod = GetValue<string>(dr, "DeliveryMethod");
			Content = GetValue<string>(dr, "Content");
			Template = GetValue<bool>(dr, "Template");
			if (HasColumn(dr, "UserName"))
				UserName = GetValue<string>(dr, "UserName");
			if (HasColumn(dr, "FullName"))
				FullName = GetValue<string>(dr, "FullName");
			if (HasColumn(dr, "Subject"))
				Subject = GetValue<string>(dr, "Subject");
#if EntityProperty_NoDate
			`field` = GetValue<`cstype`>(dr, "`field`");
#endif
#if EntityProperty_Date
			`field` = GetDateTime(dr, "`field`");
#endif
		
			
		}

		#endregion

		#region IComparable<NotificationItem> Members

		public int CompareTo(NotificationItem other)
		{
			return other == null ? 1 : string.CompareOrdinal(Name, other.Name);
		}

		#endregion
	}
}

