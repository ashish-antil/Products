/***********************************************************************
Auto Generated Code

Generated by   : PROLIFICXNZ\adamson.delacruz
Date Generated : 27/04/2009 1:27 PM
Copyright @2009 CodeGenerator
***********************************************************************/
using System;
using System.Collections.Generic;
using System.Text;
using System.Runtime.Serialization;
using FernBusinessBase;
using System.Data;
using FernBusinessBase.Control;

namespace ImardaCRMBusiness
{
	[DataContract]
	public class Person : FullBusinessEntity, IComparable<Person>
	{
		#region Constructor
		public Person()
			: base()
		{
		}
		#endregion

		#region Properties
		//$ IM-3609
		//public const int UserNameMaxLen = 50;
		//[ValidLength(-1, UserNameMaxLen)]
		//[DataMember]
		//public string UserName
		//{ get; set; }
		//. IM-3609
		public const int FullNameMaxLen = 80;
		[ValidLength(0, FullNameMaxLen)]
		[DataMember]
		public string FullName
		{ get; set; }
		public const int EmailMaxLen = 250;
		[ValidLength(-1, EmailMaxLen)]
		[DataMember]
		public string Email
		{ get; set; }
		public const int PhoneMaxLen = 20;
		[ValidLength(-1, PhoneMaxLen)]
		[DataMember]
		public string Phone
		{ get; set; }
		public const int MobilePhoneMaxLen = 20;
		[ValidLength(-1, MobilePhoneMaxLen)]
		[DataMember]
		public string MobilePhone
		{ get; set; }
		public const int JobTitleMaxLen = 50;
		[ValidLength(-1, JobTitleMaxLen)]
		[DataMember]
		public string JobTitle
		{ get; set; }
		[DataMember]
		public byte[] Picture
		{ get; set; }
		//& IM-3344
		[DataMember]
		public string LoginUsername
		{ get; set; }
		//. IM-3344
		//no DataMember
		public string PictureUrl
		{ get; set; }

		[DataMember]
		public DateTime LastLogonDate
		{ get; set; }
		[DataMember]
		public string PrimaryFleet { get; set; }

		//gs possibly needed for user
		//[DataMember]
		//public bool IsAdmin { get; set; }
		//[DataMember]
		//public string TimeZone { get; set; }
		//[DataMember]
		//public string Culture { get; set; }

		[DataMember]
		[DisplayFormat(null)]
		public DateTime LastLogonDateDisplay
		{
			get { return LastLogonDate; }
			set { }
		}

#if EntityProperty
		[DataMember]
		public `cstype` `field` { get; set; }
#endif
		#endregion

		#region Methods
		public override void AssignData(IDataReader dr)
		{
			base.AssignData(dr);
			//UserName = GetValue<string>(dr, "UserName");	//$ IM-3609
			FullName = GetValue<string>(dr, "FullName");
			Email = GetValue<string>(dr, "Email");
			Phone = GetValue<string>(dr, "Phone");
			MobilePhone = GetValue<string>(dr, "MobilePhone");
			JobTitle = GetValue<string>(dr, "JobTitle");
			Picture = GetValue<byte[]>(dr, "Picture");
			LoginUsername = GetValue<string>(dr, "LoginUsername"); //& IM-3344
			if (HasColumn(dr, "PrimaryFleet"))
			{
				PrimaryFleet = GetValue<string>(dr, "PrimaryFleet");
			}
			if (HasColumn(dr, "LastLogonDate"))
			{
				LastLogonDate = GetValue<DateTime>(dr, "LastLogonDate");
			}
#if EntityProperty_NoDate
			`field` = GetValue<`cstype`>(dr, "`field`");
#endif
#if EntityProperty_Date
			`field` = GetDateTime(dr, "`field`");
#endif


		}

		#endregion

		#region IComparable<Person> Members

		public int CompareTo(Person other)
		{
			return other == null ? 1 : string.CompareOrdinal(Email, other.Email);	//# IM-3609
		}

		#endregion
	}
}

