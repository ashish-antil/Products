/***********************************************************************
Auto Generated Code.

Generated by   : IMARDAINC\Qian.Chen
Date Generated : 12/03/2010 12:10 p.m.
Copyright (c)2009 CodeGenerator 1.2
***********************************************************************/
using System;
using System.Collections.Generic;
using System.Text;
using FernBusinessBase;
using FernBusinessBase.Errors;


namespace ImardaCRMBusiness
{
	partial class ImardaCRM
	{
		public GetItemResponse<NotificationItem> GetNotificationItem(IDRequest request)
		{
			try
			{
				return GenericGetEntity<NotificationItem>(request);
			}
			catch (Exception ex)
			{
				return ErrorHandler.Handle<GetItemResponse<NotificationItem>>(ex);
			}
		}

		public GetUpdateCountResponse GetNotificationItemUpdateCount(GetUpdateCountRequest request)
		{
			try
			{
				var response = GenericGetEntityUpdateCount<NotificationItem>("NotificationItem", request.TimeStamp, true, request.ID, request.LastRecordID);
				return response;
			}
			catch (Exception ex)
			{
				return ErrorHandler.Handle<GetUpdateCountResponse>(ex);
			}
		}

		public GetListResponse<NotificationItem> GetNotificationItemListByTimeStamp(GetListByTimestampRequest request)
		{
			try
			{
				return GenericGetEntityListByTimestamp<NotificationItem>("NotificationItem", request.TimeStamp, request.Cap, true, request.ID, request.LastRecordID);
			}
			catch (Exception ex)
			{
				return ErrorHandler.Handle<GetListResponse<NotificationItem>>(ex);
			}
		}

		public GetListResponse<NotificationItem> GetNotificationItemList(IDRequest request)
		{
			try
			{
				return GenericGetEntityList<NotificationItem>(request);
			}
			catch (Exception ex)
			{
				return ErrorHandler.Handle<GetListResponse<NotificationItem>>(ex);
			}
		}
		
		public BusinessMessageResponse SaveNotificationItem(SaveRequest<NotificationItem> request)
		{
			try
			{
				NotificationItem entity = request.Item;
				BaseEntity.ValidateThrow(entity);
				 			   
				object [] properties=new object[]
				{
						entity.ID,
						entity.Name,
						null,
						Guid.Empty,
						"",
						entity.Content,
						entity.Template,
						entity.CompanyID,
						entity.UserID,
						entity.DateCreated,
						entity.DateModified = DateTime.UtcNow,
						entity.Active,
						entity.Deleted, 
						entity.Subject
#if EntityProperty_NoDate
						,entity.`field`
#endif
#if EntityProperty_Date
						,BusinessBase.ReadyDateForStorage(entity.`field`)
#endif
					};
                var response = GenericSaveEntity<NotificationItem>(entity.CompanyID, entity.Attributes, properties);  //Review IM-3747
				return response;
			}
			catch (Exception ex)
			{
				return ErrorHandler.Handle(ex);
			}
		}

		public BusinessMessageResponse SaveNotificationItemList(SaveListRequest<NotificationItem> request)
		{
			var response = new BusinessMessageResponse();
			try
			{
				foreach (NotificationItem entity in request.List)
				{
					BaseEntity.ValidateThrow(entity);
					object [] properties=new object[]
					{
						entity.ID,
						entity.Name,
						null,
						Guid.Empty,
						"",
						entity.Content,
						entity.Template,
						entity.CompanyID,
						entity.UserID,
						entity.DateCreated,
						entity.DateModified = DateTime.UtcNow,
						entity.Active,
						entity.Deleted,
						entity.Subject
#if EntityProperty_NoDate
						,entity.`field`
#endif
#if EntityProperty_Date
						,BusinessBase.ReadyDateForStorage(entity.`field`)
#endif
					};
                    response = GenericSaveEntity<NotificationItem>(entity.CompanyID, entity.Attributes, properties); 				     //Review IM-3747
				}
				return response;
			}
			catch (Exception ex)
			{
				return ErrorHandler.Handle(ex);
			}
		}

		public BusinessMessageResponse DeleteNotificationItem(IDRequest request)
		{
			try
			{
				return GenericDeleteEntity<NotificationItem>("NotificationItem", request.ID);
			}
			catch (Exception ex)
			{
				return ErrorHandler.Handle(ex);
			}
		}
	}
}


