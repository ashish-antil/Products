/***********************************************************************
Auto Generated Code

Generated by   : PROLIFICXNZ\adamson.delacruz
Date Generated : 27/04/2009 1:27 PM
Copyright @2009 CodeGenerator
***********************************************************************/
using System;
using System.Collections.Generic;
using System.Text;
using NUnit.Framework;
using FernBusinessBase;
using ImardaCRMBusiness; 
namespace ImardaTestClient
{
	
	[TestFixture]  
	public partial class TestClient
	{
		Guid _CompanyID = Guid.NewGuid();
		[SetUp]
		public void Init()
		{
				
		}
		private void initFullEntity(FullBusinessEntity entity,Guid id)
		{
			entity.ID = id;
			entity.UserID = Guid.NewGuid();
			entity.Active = true;
			entity.DateCreated = DateTime.Now;
			entity.DateModified = DateTime.Now;
			entity.CompanyID = _CompanyID ;
			entity.Deleted = false;
		} 	   

		[Test] 
		public void CompanySelect()
		{
			GetItemResponse<ImardaCRMBusiness.Company> busResponse = null;

			IImardaCRM channel = ImardaProxyManager.Instance.IImardaCRMProxy ;
			var service = ImardaProxyManager.Instance.${Proxy};
				ChannelInvoker.Invoke(delegate(out IClientChannel channel)
				{
					channel = service as IC				
				IDRequest request = new IDRequest();
				request.ID = Guid.NewGuid();
				busResponse = channel.GetCompany (request);
			}
			if (busResponse != null && busResponse.Status && busResponse.Item != null)
			{ 			   
			}
		}
		[Test] 
		public void CompanyLocationSelect()
		{
			GetItemResponse<ImardaCRMBusiness.CompanyLocation> busResponse = null;

			IImardaCRM channel = ImardaProxyManager.Instance.IImardaCRMProxy ;
			var service = ImardaProxyManager.Instance.${Proxy};
				ChannelInvoker.Invoke(delegate(out IClientChannel channel)
				{
					channel = service as IC				
				IDRequest request = new IDRequest();
				request.ID = Guid.NewGuid();
				busResponse = channel.GetCompanyLocation (request);
			}
			if (busResponse != null && busResponse.Status && busResponse.Item != null)
			{ 			   
			}
		}
		[Test] 
		public void CompanyModuleSelect()
		{
			GetItemResponse<ImardaCRMBusiness.CompanyModule> busResponse = null;

			IImardaCRM channel = ImardaProxyManager.Instance.IImardaCRMProxy ;
			var service = ImardaProxyManager.Instance.${Proxy};
				ChannelInvoker.Invoke(delegate(out IClientChannel channel)
				{
					channel = service as IC				
				IDRequest request = new IDRequest();
				request.ID = Guid.NewGuid();
				busResponse = channel.GetCompanyModule (request);
			}
			if (busResponse != null && busResponse.Status && busResponse.Item != null)
			{ 			   
			}
		}
		[Test] 
		public void EmailGroupSelect()
		{
			GetItemResponse<ImardaCRMBusiness.EmailGroup> busResponse = null;

			IImardaCRM channel = ImardaProxyManager.Instance.IImardaCRMProxy ;
			var service = ImardaProxyManager.Instance.${Proxy};
				ChannelInvoker.Invoke(delegate(out IClientChannel channel)
				{
					channel = service as IC				
				IDRequest request = new IDRequest();
				request.ID = Guid.NewGuid();
				busResponse = channel.GetEmailGroup (request);
			}
			if (busResponse != null && busResponse.Status && busResponse.Item != null)
			{ 			   
			}
		}
		[Test] 
		public void PersonSelect()
		{
			GetItemResponse<ImardaCRMBusiness.Person> busResponse = null;

			IImardaCRM channel = ImardaProxyManager.Instance.IImardaCRMProxy ;
			var service = ImardaProxyManager.Instance.${Proxy};
				ChannelInvoker.Invoke(delegate(out IClientChannel channel)
				{
					channel = service as IC				
				IDRequest request = new IDRequest();
				request.ID = Guid.NewGuid();
				busResponse = channel.GetPerson (request);
			}
			if (busResponse != null && busResponse.Status && busResponse.Item != null)
			{ 			   
			}
		}
		[Test] 
		public void ReportSelect()
		{
			GetItemResponse<ImardaCRMBusiness.Report> busResponse = null;

			IImardaCRM channel = ImardaProxyManager.Instance.IImardaCRMProxy ;
			var service = ImardaProxyManager.Instance.${Proxy};
				ChannelInvoker.Invoke(delegate(out IClientChannel channel)
				{
					channel = service as IC				
				IDRequest request = new IDRequest();
				request.ID = Guid.NewGuid();
				busResponse = channel.GetReport (request);
			}
			if (busResponse != null && busResponse.Status && busResponse.Item != null)
			{ 			   
			}
		}
		[Test] 
		public void ReportTypeSelect()
		{
			GetItemResponse<ImardaCRMBusiness.ReportType> busResponse = null;

			IImardaCRM channel = ImardaProxyManager.Instance.IImardaCRMProxy ;
			var service = ImardaProxyManager.Instance.${Proxy};
				ChannelInvoker.Invoke(delegate(out IClientChannel channel)
				{
					channel = service as IC				
				IDRequest request = new IDRequest();
				request.ID = Guid.NewGuid();
				busResponse = channel.GetReportType (request);
			}
			if (busResponse != null && busResponse.Status && busResponse.Item != null)
			{ 			   
			}
		}
		[Test] 
		public void RoleSelect()
		{
			GetItemResponse<ImardaCRMBusiness.Role> busResponse = null;

			IImardaCRM channel = ImardaProxyManager.Instance.IImardaCRMProxy ;
			var service = ImardaProxyManager.Instance.${Proxy};
				ChannelInvoker.Invoke(delegate(out IClientChannel channel)
				{
					channel = service as IC				
				IDRequest request = new IDRequest();
				request.ID = Guid.NewGuid();
				busResponse = channel.GetRole (request);
			}
			if (busResponse != null && busResponse.Status && busResponse.Item != null)
			{ 			   
			}
		}
		[Test] 
		public void RoleTypeSelect()
		{
			GetItemResponse<ImardaCRMBusiness.RoleType> busResponse = null;

			IImardaCRM channel = ImardaProxyManager.Instance.IImardaCRMProxy ;
			var service = ImardaProxyManager.Instance.${Proxy};
				ChannelInvoker.Invoke(delegate(out IClientChannel channel)
				{
					channel = service as IC				
				IDRequest request = new IDRequest();
				request.ID = Guid.NewGuid();
				busResponse = channel.GetRoleType (request);
			}
			if (busResponse != null && busResponse.Status && busResponse.Item != null)
			{ 			   
			}
		}
		[Test] 
		public void TaskSelect()
		{
			GetItemResponse<ImardaCRMBusiness.Task> busResponse = null;

			IImardaCRM channel = ImardaProxyManager.Instance.IImardaCRMProxy ;
			var service = ImardaProxyManager.Instance.${Proxy};
				ChannelInvoker.Invoke(delegate(out IClientChannel channel)
				{
					channel = service as IC				
				IDRequest request = new IDRequest();
				request.ID = Guid.NewGuid();
				busResponse = channel.GetTask (request);
			}
			if (busResponse != null && busResponse.Status && busResponse.Item != null)
			{ 			   
			}
		}
		[Test] 
		public void TaskScheduleSelect()
		{
			GetItemResponse<ImardaCRMBusiness.TaskSchedule> busResponse = null;

			IImardaCRM channel = ImardaProxyManager.Instance.IImardaCRMProxy ;
			var service = ImardaProxyManager.Instance.${Proxy};
				ChannelInvoker.Invoke(delegate(out IClientChannel channel)
				{
					channel = service as IC				
				IDRequest request = new IDRequest();
				request.ID = Guid.NewGuid();
				busResponse = channel.GetTaskSchedule (request);
			}
			if (busResponse != null && busResponse.Status && busResponse.Item != null)
			{ 			   
			}
		}

		
	}
}


