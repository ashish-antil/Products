/***********************************************************************
Auto Generated Code

Generated by   : adam-Laptop\adam
Date Generated : 28/04/2009 5:38 PM
Copyright @2009 CodeGenerator
***********************************************************************/
using System;
using System.Collections.Generic;
using System.Text;
using FernBusinessBase;
using FernBusinessBase.Errors;
using ImardaCRMBusiness;
using System.ServiceModel;

namespace Imarda360Application.CRM
{
	partial class ImardaCRM
	{

		#region Get CompanyLocation
		public GetItemResponse<CompanyLocation> GetCompanyLocation(IDRequest request)
		{
			try
			{
				GetItemResponse<CompanyLocation> response = null;
				var service = ImardaProxyManager.Instance.IImardaCRMProxy;
				ChannelInvoker.Invoke(delegate(out IClientChannel channel)
				{
					
					channel = service as IClientChannel;
					response =  service.GetCompanyLocation(request);
				});
				return response;
			}
			catch (Exception ex)
			{
				return ErrorHandler.Handle<GetItemResponse<CompanyLocation>>(ex);
			}
		}
		#endregion
		#region GetCompanyLocationUpdateCount
		

		public GetUpdateCountResponse GetCompanyLocationUpdateCount(GetUpdateCountRequest request)
		{
			GetUpdateCountResponse response = new GetUpdateCountResponse();

			try
			{
				response = GenericGetEntityUpdateCount<CompanyLocation>("CompanyLocation", request.TimeStamp, true, request.ID, request.LastRecordID);
				var service = ImardaProxyManager.Instance.IImardaCRMProxy;
				ChannelInvoker.Invoke(delegate(out IClientChannel channel)
				{
					
					channel = service as IClientChannel;
					response =  service.GetCompanyLocationUpdateCount(request);
				});
				return response;
			}
			catch (Exception ex)
			{
				return ErrorHandler.Handle<GetUpdateCountResponse>(ex);
			}
		}
		#endregion
		#region GetCompanyLocationListByTimeStamp
		

		public GetListResponse<CompanyLocation> GetCompanyLocationListByTimeStamp(GetListByTimestampRequest request)
		{
			try
			{
				GetListResponse<CompanyLocation> response = null;
				var service = ImardaProxyManager.Instance.IImardaCRMProxy;
				ChannelInvoker.Invoke(delegate(out IClientChannel channel)
				{
					
					channel = service as IClientChannel;
					response =  service.GetCompanyLocationListByTimeStamp(request);
				});
				return response;
			}
			catch (Exception ex)
			{
				return ErrorHandler.Handle<GetListResponse<CompanyLocation>>(ex);
			}
		}
		#endregion
		#region GetCompanyLocationList
		

		public GetListResponse<CompanyLocation> GetCompanyLocationList(IDRequest request)
		{
			try
			{
				GetListResponse<CompanyLocation> response = null;
				var service = ImardaProxyManager.Instance.IImardaCRMProxy;
				ChannelInvoker.Invoke(delegate(out IClientChannel channel)
				{
					
					channel = service as IClientChannel;
					response =  service.GetCompanyLocationList(request);
				});
				return response;
			}
			catch (Exception ex)
			{
				return ErrorHandler.Handle<GetListResponse<CompanyLocation>>(ex);
			}
		}
		#endregion
		#region Save CompanyLocation
		public BusinessMessageResponse SaveCompanyLocation(SaveRequest<CompanyLocation> request)
		{
			var response = new BusinessMessageResponse();
			try
			{
				var service = ImardaProxyManager.Instance.IImardaCRMProxy;
				ChannelInvoker.Invoke(delegate(out IClientChannel channel)
				{
					
					channel = service as IClientChannel;
					response =  service.SaveCompanyLocation(request);
				});
			}
			catch (Exception ex)
			{
				return ErrorHandler.Handle(ex);
			}
			return response;
		}
		#endregion
		#region SaveCompanyLocationList
		

		public BusinessMessageResponse SaveCompanyLocationList(SaveListRequest<CompanyLocation> request)
		{
			try
			{
				BusinessMessageResponse response = null;
				var service = ImardaProxyManager.Instance.IImardaCRMProxy;
				ChannelInvoker.Invoke(delegate(out IClientChannel channel)
				{
					
					channel = service as IClientChannel;
					response = service.SaveCompanyLocationList(request);
				});
				return response;
			}
			catch (Exception ex)
			{
				return ErrorHandler.Handle(ex);
			}
		}
		#endregion
		#region Delete CompanyLocation
		

		public BusinessMessageResponse DeleteCompanyLocation(IDRequest request)
		{
			try
			{
				BusinessMessageResponse response = null;
				var service = ImardaProxyManager.Instance.IImardaCRMProxy;
				ChannelInvoker.Invoke(delegate(out IClientChannel channel)
				{
					
					channel = service as IClientChannel;
					response =  service.DeleteCompanyLocation(request);
				});
				return response;
			}
			catch (Exception ex)
			{
				return ErrorHandler.Handle(ex);
			}
		}
		#endregion
	}
}


