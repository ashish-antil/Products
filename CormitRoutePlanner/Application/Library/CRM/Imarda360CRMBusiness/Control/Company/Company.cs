/***********************************************************************
Auto Generated Code

Generated by   : adam-Laptop\adam
Date Generated : 28/04/2009 5:38 PM
Copyright @2009 CodeGenerator
***********************************************************************/
using System;
using System.Collections.Generic;
using System.Text;
using FernBusinessBase;
using FernBusinessBase.Errors;
using ImardaCRMBusiness;
using System.ServiceModel;

namespace Imarda360Application.CRM
{
	partial class ImardaCRM
	{

		#region Get Company
		public GetItemResponse<Company> GetCompany(IDRequest request)
		{
			try
			{
				GetItemResponse<Company> response = null;
				var service = ImardaProxyManager.Instance.IImardaCRMProxy;
				ChannelInvoker.Invoke(delegate(out IClientChannel channel)
				{
					
					channel = service as IClientChannel;
					response = service.GetCompany(request);
				});
				return response;
			}
			catch (Exception ex)
			{
				return ErrorHandler.Handle<GetItemResponse<Company>>(ex);
			}
		}
		#endregion
		#region GetCompanyUpdateCount
		

		public GetUpdateCountResponse GetCompanyUpdateCount(GetUpdateCountRequest request)
		{
			try
			{
				GetUpdateCountResponse response = null;
				var service = ImardaProxyManager.Instance.IImardaCRMProxy;
				ChannelInvoker.Invoke(delegate(out IClientChannel channel)
				{
					
					channel = service as IClientChannel;
					response = service.GetCompanyUpdateCount(request);
				});
				return response;
			}
			catch (Exception ex)
			{
				return ErrorHandler.Handle<GetUpdateCountResponse>(ex);
			}
		}
		#endregion
		#region GetCompanyListByTimeStamp
		

		public GetListResponse<Company> GetCompanyListByTimeStamp(GetListByTimestampRequest request)
		{
			try
			{
				GetListResponse<Company> response = null;
				var service = ImardaProxyManager.Instance.IImardaCRMProxy;
				ChannelInvoker.Invoke(delegate(out IClientChannel channel)
				{
					
					channel = service as IClientChannel;
					response = service.GetCompanyListByTimeStamp(request);
				});
				return response;
			}
			catch (Exception ex)
			{
				return ErrorHandler.Handle<GetListResponse<Company>>(ex);
			}
		}
		#endregion
		#region GetCompanyList
		

		public GetListResponse<Company> GetCompanyList(IDRequest request)
		{
			try
			{
				GetListResponse<Company> response = null;
				var service = ImardaProxyManager.Instance.IImardaCRMProxy;
				ChannelInvoker.Invoke(delegate(out IClientChannel channel)
				{
					
					channel = service as IClientChannel;
					response = service.GetCompanyList(request);
				});
				return response;
			}
			catch (Exception ex)
			{
				return ErrorHandler.Handle<GetListResponse<Company>>(ex);
			}
		}
		#endregion
		#region Save Company
		public BusinessMessageResponse SaveCompany(SaveRequest<Company> request)
		{
			try
			{
				BusinessMessageResponse response = null;
				var service = ImardaProxyManager.Instance.IImardaCRMProxy;
				ChannelInvoker.Invoke(delegate(out IClientChannel channel)
				{
					
					channel = service as IClientChannel;
					response = service.SaveCompany(request);
				});
				return response;
			}
			catch (Exception ex)
			{
				return ErrorHandler.Handle(ex);
			}
		}
		#endregion
		#region SaveCompanyList
		

		public BusinessMessageResponse SaveCompanyList(SaveListRequest<Company> request)
		{
			try
			{
				BusinessMessageResponse response = null;
				var service = ImardaProxyManager.Instance.IImardaCRMProxy;
				ChannelInvoker.Invoke(delegate(out IClientChannel channel)
				{
					
					channel = service as IClientChannel;
					response = service.SaveCompanyList(request);
				});
				return response;
			}
			catch (Exception ex)
			{
				return ErrorHandler.Handle(ex);
			}
		}
		#endregion

	}
}


