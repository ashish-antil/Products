/***********************************************************************
Auto Generated Code

Generated by   : adam-Laptop\adam
Date Generated : 28/04/2009 12:33 PM
Copyright @2009 CodeGenerator
***********************************************************************/
using System;
using System.Collections.Generic;
using System.Text;
using System.Runtime.Serialization;
using FernBusinessBase;
using System.Data;
using FernBusinessBase.Control;

namespace Imarda360Application.CRM
{
	[DataContract]
	public class Company : FullBusinessEntity 
	{				
		#region Constructor
		public Company():base()
		{
		}
		#endregion
		
		#region Properties
		[DataMember]
		public string Name 
		{get ;set ;}
		[DataMember]
		public string StreetAddress 
		{get ;set ;}
		[DataMember]
		public string Suburb 
		{get ;set ;}
		[DataMember]
		public string State 
		{get ;set ;}
		[DataMember]
		public string PostCode 
		{get ;set ;}
		[DataMember]
		public string DisplayName 
		{get ;set ;}
		[DataMember]
		public string Phone 
		{get ;set ;}
		[DataMember]
		public string Fax 
		{get ;set ;}
		[DataMember]
		public string Mobile 
		{get ;set ;}
		[DataMember]
		public string Email 
		{get ;set ;}
		[DataMember]
		public string ServiceEmail 
		{get ;set ;}
		[DataMember]
		public string RunPrograms 
		{get ;set ;}
		[DataMember]
		public Guid AccountManagerID 
		{get ;set ;}
		[DataMember]
		public int AutoLogoffPeriod 
		{get ;set ;}
		[DataMember]
		public int GracePeriod 
		{get ;set ;}
		[DataMember]
		public Byte MinorBreak 
		{get ;set ;}
		[DataMember]
		public Byte MajorBreak 
		{get ;set ;}
		[DataMember]
		public Int16 WorkPeriod 
		{get ;set ;}
		[DataMember]
		public Guid MapLocationID 
		{get ;set ;}
#if EntityProperty
		[DataMember]
		public `cstype` `field` { get; set; }
#endif
		
		#endregion

		#region Methods
		public override void AssignData(IDataReader dr) 
		{
			base.AssignData(dr);
			Name = GetColumn<string>(dr, "Name");
			StreetAddress = GetColumn<string>(dr, "StreetAddress");
			Suburb = GetColumn<string>(dr, "Suburb");
			State = GetColumn<string>(dr, "State");
			PostCode = GetColumn<string>(dr, "PostCode");
			DisplayName = GetColumn<string>(dr, "DisplayName");
			Phone = GetColumn<string>(dr, "Phone");
			Fax = GetColumn<string>(dr, "Fax");
			Mobile = GetColumn<string>(dr, "Mobile");
			Email = GetColumn<string>(dr, "Email");
			ServiceEmail = GetColumn<string>(dr, "ServiceEmail");
			RunPrograms = GetColumn<string>(dr, "RunPrograms");
			AccountManagerID = GetColumn<Guid>(dr, "AccountManagerID");
			AutoLogoffPeriod = GetColumn<int>(dr, "AutoLogoffPeriod");
			GracePeriod = GetColumn<int>(dr, "GracePeriod");
			MinorBreak = GetColumn<Byte>(dr, "MinorBreak");
			MajorBreak = GetColumn<Byte>(dr, "MajorBreak");
			WorkPeriod = GetColumn<Int16>(dr, "WorkPeriod");
			MapLocationID = GetColumn<Guid>(dr, "MapLocationID");
#if EntityProperty_NoDate
			`field` = GetColumn<`cstype`>(dr, "`field`");
#endif
#if EntityProperty_Date
			`field` = GetDateTime(dr, "`field`");
#endif
		

		}

		#endregion

	
	}
}

