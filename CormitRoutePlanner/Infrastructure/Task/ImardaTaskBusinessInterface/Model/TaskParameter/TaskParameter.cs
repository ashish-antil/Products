/***********************************************************************
Auto Generated Code

Generated by   : PROLIFICXNZ\maurice.verheijen
Date Generated : 24/06/2009 9:55 a.m.
Copyright @2009 CodeGenerator
***********************************************************************/
using System;
using System.Collections.Generic;
using System.Text;
using System.Runtime.Serialization;
using FernBusinessBase;
using System.Data;
using FernBusinessBase.Control;

namespace ImardaTaskBusiness 
{
	[DataContract]
	public class TaskParameter : FullBusinessEntity 
	{				
		#region Constructor
		public TaskParameter():base()
		{
		}
		#endregion
		
		#region Properties
		[DataMember]
		public Guid TaskID 
		{get ;set ;}
		[DataMember]
		public bool Output 
		{get ;set ;}
		[DataMember]
		public bool Fixed 
		{get ;set ;}
		[DataMember]
		public Byte Ord 
		{get ;set ;}
		public const int NameMaxLen = 20;
		[ValidLength(0, NameMaxLen)]
		[DataMember]
		public string Name 
		{get ;set ;}
		public const int DataTypeMaxLen = 100;
		[ValidLength(0, DataTypeMaxLen)]
		[DataMember]
		public string DataType 
		{get ;set ;}
		public const int DisplayNameMaxLen = 50;
		[ValidLength(-1, DisplayNameMaxLen)]
		[DataMember]
		public string DisplayName 
		{get ;set ;}
		public const int ValueMaxLen = 500;
		[ValidLength(-1, ValueMaxLen)]
		[DataMember]
		public string Value 
		{get ;set ;}
#if EntityProperty
		[DataMember]
		public `cstype` `field` { get; set; }
#endif
		
		#endregion

		#region Methods
		public override void AssignData(IDataReader dr) 
		{
			base.AssignData(dr);
			TaskID = GetValue<Guid>(dr, "TaskID");
			Output = GetValue<bool>(dr, "Output");
			Fixed = GetValue<bool>(dr, "Fixed");
			Ord = GetValue<Byte>(dr, "Ord");
			Name = GetValue<string>(dr, "Name");
			DataType = GetValue<string>(dr, "DataType");
			DisplayName = GetValue<string>(dr, "DisplayName");
			Value = GetValue<string>(dr, "Value");
#if EntityProperty_NoDate
			`field` = GetValue<`cstype`>(dr, "`field`");
#endif
#if EntityProperty_Date
			`field` = GetDateTime(dr, "`field`");
#endif
		

		}

		#endregion

	
	}
}

