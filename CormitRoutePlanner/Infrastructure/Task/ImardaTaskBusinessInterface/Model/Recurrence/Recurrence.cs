/***********************************************************************
Auto Generated Code

Generated by   : PROLIFICXNZ\maurice.verheijen
Date Generated : 24/06/2009 9:55 a.m.
Copyright @2009 CodeGenerator
***********************************************************************/
using System;
using System.Collections.Generic;
using System.Text;
using System.Runtime.Serialization;
using FernBusinessBase;
using System.Data;
using FernBusinessBase.Control;

namespace ImardaTaskBusiness 
{
	[DataContract]
	public class Recurrence : FullBusinessEntity 
	{				
		#region Constructor
		public Recurrence():base()
		{
		}
		#endregion
		
		#region Properties
		public const int DefinitionMaxLen = 120;
		[ValidLength(0, DefinitionMaxLen)]
		[DataMember]
		public string Definition 
		{get ;set ;}
		[DataMember]
		public DateTime Start 
		{get ;set ;}
		public const int EndConditionMaxLen = 120;
		[ValidLength(-1, EndConditionMaxLen)]
		[DataMember]
		public string EndCondition 
		{get ;set ;}
		[DataMember]
		public int EventNumber 
		{get ;set ;}
		[DataMember]
		public DateTime Last 
		{get ;set ;}
		[DataMember]
		public DateTime Next 
		{get ;set ;}
#if EntityProperty
		[DataMember]
		public `cstype` `field` { get; set; }
#endif
		
		#endregion

		#region Methods
		public override void AssignData(IDataReader dr) 
		{
			base.AssignData(dr);
			Definition = GetValue<string>(dr, "Definition");
			Start = GetDateTime(dr, "Start");
			EndCondition = GetValue<string>(dr, "EndCondition");
			EventNumber = GetValue<int>(dr, "EventNumber");
			Last = GetDateTime(dr, "Last");
			Next = GetDateTime(dr, "Next");
#if EntityProperty_NoDate
			`field` = GetValue<`cstype`>(dr, "`field`");
#endif
#if EntityProperty_Date
			`field` = GetDateTime(dr, "`field`");
#endif
		

		}

		#endregion

	
	}
}

