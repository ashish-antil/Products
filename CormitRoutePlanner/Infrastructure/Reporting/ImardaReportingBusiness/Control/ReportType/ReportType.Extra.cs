/***********************************************************************
Auto Generated Code

Generated by   : PROLIFICXNZ\maurice.verheijen
Date Generated : 24/06/2009 2:48 p.m.
Copyright @2009 CodeGenerator
***********************************************************************/
using System;
using System.Collections.Generic;
using System.Text;
using FernBusinessBase;
using FernBusinessBase.Errors;
using System.Data;
using System.ServiceModel;

namespace ImardaReportBusiness
{
	partial class ImardaReport
	{


		#region ChangeReportTypeOwner
		private BusinessMessageResponse ChangeReportTypeOwner(SaveRequest<ReportType> request)
		{
			BusinessMessageResponse response = new BusinessMessageResponse();
			try
			{
				var db = ImardaDatabase.CreateDatabase(Util.GetConnName<ReportType>());
				object[] args = new object[] { request.Item.ID, request.Item.OwnerID };
				db.ExecuteNonQuery("SPChangeReportTypeOwner", args);
			}
			catch (Exception ex)
			{
				return ErrorHandler.Handle(ex);
			}
			return response;
		}
		#endregion
		#region ChangeReportTypeListOwner
		

		public BusinessMessageResponse ChangeReportTypeListOwner(SaveListRequest<ReportType> request)
		{
			Initialize();
			BusinessMessageResponse response = new BusinessMessageResponse();
			string sNewOwnerID = request["NewOwnerID"].ToLower();
			Guid newOwnerID = new Guid(sNewOwnerID);
			string pathFrom = null;
			string pathTo = null;
			bool moved = false;
			try
			{
				foreach (ReportType reportType in request.List)
				{
					SaveRequest<ReportType> req = new SaveRequest<ReportType>();
					moved = false;
					string ownerPath = InstancesFolder + '/' + sNewOwnerID.ToLower();
					CreateFolder(sNewOwnerID.ToLower(), InstancesFolder);

					pathFrom = InstancesFolder + '/' + reportType.OwnerID.ToString().ToLower() + '/' + reportType.Name;
					pathTo = ownerPath + '/' + reportType.Name;
					_Rs2005.MoveItem(pathFrom, pathTo);
					moved = true;
					reportType.OwnerID = newOwnerID;
					req.Item = reportType;
					ChangeReportTypeOwner(req);
				}
			}
			catch (Exception ex)
			{
				if (moved) _Rs2005.MoveItem(pathTo, pathFrom); // reverse the move
				
				return ErrorHandler.Handle(ex);
				
			}
			return response;
		}
		#endregion

	}
}


