/***********************************************************************
Auto Generated Code

Generated by   : PROLIFICXNZ\maurice.verheijen
Date Generated : 24/06/2009 2:48 p.m.
Copyright @2009 CodeGenerator
***********************************************************************/
using System;
using System.Collections.Generic;
using System.Text;
using System.Runtime.Serialization;
using FernBusinessBase;
using System.Data;
using FernBusinessBase.Control;

namespace ImardaReportBusiness 
{
	[DataContract]
	public partial class Report : FullBusinessEntity 
	{				
		#region Constructor
		public Report():base()
		{
		}
		#endregion
		
		#region Properties
		[DataMember]
		public Guid ReportTypeID 
		{get ;set ;}
		public const int ReportNumberMaxLen = 20;
		[ValidLength(-1, ReportNumberMaxLen)]
		[DataMember]
		public string ReportNumber 
		{get ;set ;}
		public const int SnapshotNameMaxLen = 120;
		[ValidLength(-1, SnapshotNameMaxLen)]
		[DataMember]
		public string SnapshotName 
		{get ;set ;}
		[DataMember]
		public Guid ScheduledTaskID 
		{get ;set ;}
		[DataMember]
		public DateTime Expiry 
		{get ;set ;}
		public const int NotesMaxLen = 200;
		[ValidLength(-1, NotesMaxLen)]
		[DataMember]
		public string Notes 
		{get ;set ;}
		[DataMember]
		public Byte Status 
		{get ;set ;}
#if EntityProperty
		[DataMember]
		public `cstype` `field` { get; set; }
#endif
		
		#endregion

		#region Methods
		public override void AssignData(IDataReader dr) 
		{
			base.AssignData(dr);
			ReportTypeID = GetValue<Guid>(dr, "ReportTypeID");
			ReportNumber = GetValue<string>(dr, "ReportNumber");
			SnapshotName = GetValue<string>(dr, "SnapshotName");
			ScheduledTaskID = GetValue<Guid>(dr, "ScheduledTaskID");
			Expiry = GetDateTime(dr, "Expiry");
			Notes = GetValue<string>(dr, "Notes");
			Status = GetValue<Byte>(dr, "Status");
#if EntityProperty_NoDate
			`field` = GetValue<`cstype`>(dr, "`field`");
#endif
#if EntityProperty_Date
			`field` = GetDateTime(dr, "`field`");
#endif
		
		}

		#endregion

		public override string ToString()
		{
			return string.Format("Report(Type={0}, #{1}, \"{2}\")", ReportTypeID, ReportNumber, SnapshotName);
		}
	
	}
}

