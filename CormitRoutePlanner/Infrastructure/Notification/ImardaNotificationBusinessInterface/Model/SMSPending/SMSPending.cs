/***********************************************************************
Auto Generated Code.

Generated by   : IMARDAINC\Qian.Chen
Date Generated : 12/02/2010 3:40 p.m.
Copyright (c)2009 CodeGenerator 1.2
***********************************************************************/
using System;
using System.Collections.Generic;
using System.Text;
using System.Data;
using System.Runtime.Serialization;
using FernBusinessBase;
using FernBusinessBase.Control;
using Imarda.Lib;

namespace ImardaNotificationBusiness
{
	[DataContract]
	public class SMSPending : FullBusinessEntity
	{
		#region Constructor
		public SMSPending()
		{
		}
		public SMSPending(SMSDraft draft)
			: base()
		{
			SMSDraftID = draft.ID;
			Subject = draft.Subject;
			Message = draft.Message;
			NotificationID = draft.NotificationID;
			ToPhoneNumber = "";
			Retry = 0;
			Status = "Pending";
			LastRetryAt = DateTime.UtcNow;
			TimeToSend = DateTime.UtcNow;

			ID = SequentialGuid.NewDbGuid();
			CompanyID = draft.CompanyID;
			UserID = draft.UserID;

		}
		public SMSPending(SMSFailed sf)
			: base()
		{
			this.ID = SequentialGuid.NewDbGuid();
			this.CompanyID = sf.CompanyID;
			this.UserID = sf.UserID;

			this.LastRetryAt = sf.LastRetryAt;
			this.Subject = sf.Subject;
			this.Message = sf.Message;
			this.NotificationID = sf.NotificationID;
			this.RecipientName = sf.RecipientName;
			this.Retry = sf.Retry;
			this.SMSDraftID = sf.SMSDraftID;
			this.Status = "Pending";
			this.TimeToSend = sf.TimeToSend;
			this.ToPhoneNumber = sf.ToPhoneNumber;
		}
		#endregion

		#region Properties

		[DataMember]
		public Guid SMSDraftID { get; set; }

		public const int SubjectMaxLen = 50;
		[ValidLength(-1, SubjectMaxLen)]
		[DataMember]
		public string Subject { get; set; }

		[DataMember]
		public string Message { get; set; }

		[DataMember]
		public Guid NotificationID { get; set; }

		public const int RecipientNameMaxLen = 50;
		[ValidLength(-1, RecipientNameMaxLen)]
		[DataMember]
		public string RecipientName { get; set; }

		public const int ToPhoneNumberMaxLen = 50;
		[ValidLength(0, ToPhoneNumberMaxLen)]
		[DataMember]
		public string ToPhoneNumber { get; set; }

		[DataMember]
		public int Retry { get; set; }

		[DataMember]
		public DateTime TimeToSend { get; set; }

		public const int StatusMaxLen = 50;
		[ValidLength(-1, StatusMaxLen)]
		[DataMember]
		public string Status { get; set; }

		[DataMember]
		public DateTime LastRetryAt { get; set; }
#if EntityProperty
		[DataMember]
		public `cstype` `field` { get; set; }
#endif
		

		#endregion

		#region Methods
		public override void AssignData(IDataReader dr) 
		{
			base.AssignData(dr);
			SMSDraftID = GetValue<Guid>(dr, "SMSDraftID");
			Subject = GetValue<string>(dr, "Subject");
			Message = GetValue<string>(dr, "Message");
			NotificationID = GetValue<Guid>(dr, "NotificationID");
			RecipientName = GetValue<string>(dr, "RecipientName");
			ToPhoneNumber = GetValue<string>(dr, "ToPhoneNumber");
			Retry = GetValue<int>(dr, "Retry");
			TimeToSend = GetDateTime(dr, "TimeToSend");
			Status = GetValue<string>(dr, "Status");
			LastRetryAt = GetDateTime(dr, "LastRetryAt");
#if EntityProperty_NoDate
			`field` = GetColumn<`cstype`>(dr, "`field`");
#endif
#if EntityProperty_Date
			`field` = GetDateTime(dr, "`field`");
#endif
		

		}

		#endregion


	}
}
